{"version":3,"sources":["../src/util.js"],"names":["promiseTimeout","packageIdentifier","escape","s","replace","errorCodes","PROMISE_TIMEOUT","ms","promise","timeout","Promise","resolve","reject","id","setTimeout","clearTimeout","error","Error","code","race","addons","identifierMap","Object","assign","pkg","name","version","os","platform","release","node","process","keys","reduce","acc","k"],"mappings":";;;;;;QASgBA,c,GAAAA,c;QAwBAC,iB,GAAAA,iB;;AAjChB;;;;AACA;;;;;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;AAAE,SAAOA,EAAEC,OAAF,CAAU,GAAV,EAAe,GAAf,EAAoBA,OAApB,CAA4B,GAA5B,EAAiC,GAAjC,CAAP;AAA+C;;AAE7D,IAAMC,kCAAa;AACxBC,mBAAiB;AADO,CAAnB;;AAIA,SAASN,cAAT,CAAwBO,EAAxB,EAA4BC,OAA5B,EAAqC;AAC1C;AACA,MAAMC,UAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/C,QAAMC,KAAKC,WAAW,YAAM;AAC1BC,mBAAaF,EAAb;AACA,UAAMG,QAAQ,IAAIC,KAAJ,CAAU,mBAAV,CAAd;AACAD,YAAME,IAAN,GAAab,WAAWC,eAAxB;AACAM,aAAOI,KAAP;AACD,KALU,EAKRT,EALQ,CAAX;AAMD,GAPe,CAAhB;AAQA;AACA,SAAOG,QAAQS,IAAR,CAAa,CAClBX,OADkB,EAElBC,OAFkB,CAAb,CAAP;AAID;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASR,iBAAT,GAAwC;AAAA,MAAbmB,MAAa,uEAAJ,EAAI;;AAC7C,MAAMC,gBAAgBC,OAAOC,MAAP,CAAc;AAClC,KAAE,GAAEC,kBAAIC,IAAK,EAAb,GAAiBD,kBAAIE,OADa;AAElC,KAAE,GAAEC,aAAGC,QAAH,EAAc,EAAlB,GAAsBD,aAAGE,OAAH,EAFY;AAGlCC,UAAMC,QAAQL,OAAR,CAAgBtB,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B;AAH4B,GAAd,EAInBgB,MAJmB,CAAtB;AAKA,SAAOE,OAAOU,IAAP,CAAYX,aAAZ,EAA2BY,MAA3B,CAAkC,UAACC,GAAD,EAAMC,CAAN;AAAA,WAAa,GAAED,GAAI,IAAGhC,OAAOiC,CAAP,CAAU,IAAGjC,OAAOmB,cAAcc,CAAd,CAAP,CAAyB,EAA5D;AAAA,GAAlC,EAAiG,EAAjG,CAAP;AACD","file":"util.js","sourcesContent":["import os from 'os';\nimport pkg from '../package.json';\n\nfunction escape(s) { return s.replace('/', ':').replace(' ', '_'); }\n\nexport const errorCodes = {\n  PROMISE_TIMEOUT: 'SLACKMESSAGEUTIL_PROMISE_TIMEOUT',\n};\n\nexport function promiseTimeout(ms, promise) {\n  // Create a promise that rejects in <ms> milliseconds\n  const timeout = new Promise((resolve, reject) => {\n    const id = setTimeout(() => {\n      clearTimeout(id);\n      const error = new Error('Promise timed out');\n      error.code = errorCodes.PROMISE_TIMEOUT;\n      reject(error);\n    }, ms);\n  });\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([\n    promise,\n    timeout,\n  ]);\n}\n\n// NOTE: before this can be an external module:\n// 1. are all the JS features supported back to a reasonable version?\n//    default params, template strings, computed property names\n// 2. access to `pkg` will change\n// 3. tests\n// there will potentially be more named exports in this file\n// eslint-disable-next-line import/prefer-default-export\nexport function packageIdentifier(addons = {}) {\n  const identifierMap = Object.assign({\n    [`${pkg.name}`]: pkg.version,\n    [`${os.platform()}`]: os.release(),\n    node: process.version.replace('v', ''),\n  }, addons);\n  return Object.keys(identifierMap).reduce((acc, k) => `${acc} ${escape(k)}/${escape(identifierMap[k])}`, '');\n}\n"]}